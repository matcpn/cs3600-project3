Milestone README

Our approach for the milestone was to set up the data structures for the header. We made a barebones struct for the header that had all of the bitfields set correctly to how big the unsigned ints needed to be to be thrown together for the header. We then created a scalable and concise helper function for parsing the arguments. We planned on doing the extra credit, so we added in if clauses and statements for that too, but we won't be touching them today. 

To parse the arguments we had a few disagreements on how to structure and design the functions that would be doing dynamic allocation, as we were thinking in different mindsets. We ended up agreeing on one way over another arbitrarily as both the solutions we would think of would work, with just about the same amount of work. 

We then took a break to prepare dinner and to eat snacks.

We then realized that the way we were parsing the arguments required us to know the length of the domain name to create the data structure for holding the address. We realized that this was just not going to work, and had to rework our approach to parsing the arguments.

Afterwards, we realized our tests were all failing because we never wrote the line to print the packet, cause we're bad at this apparently. 

The last thing we did, that is part of our approach was making the size of the packet too small, which meant we were losing data and not printing out everything we needed.

Final README
The biggest challenge we faced after the Milestone was moving on from the header.

It turns out that the struct for the header was stupid and just not maintainable by us once we listened to the bitwise operation method of doing this. We really didn't trust memcpy to keep the structure of the bytes in the struct and then transfer it over correctly to the char. It seemed like a headache that we didn't need.

We then switched to doing the bitwise and operators to check that the hex we received back in our header was the hex we needed to look at, and that it was parsable.

Our approach them switched to sanity-checking the header that we received back, because we have a pretty loose understanding of the entire transaction that is happening and needed to see all the values be correct.

The next big thing that we needed to do was follow the pointers for the CNAME entries because we listened in class as to what we were supposed to do, and then the function we wrote was way longer than it was supposed to be, but it worked. 

The CNAME entries were weird when we went to print out the address returned, things were nice at first but then didn't go so well once we tried the testing script. We were able to deduce that we were just off-by a certain amount. Following the trend of our DNS project, we just kind of fudged the numbers.